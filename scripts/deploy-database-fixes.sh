#!/bin/bash\n\n# High-Priority Database Fixes Deployment Script\n# This script applies the critical database integrity fixes\n\nset -e  # Exit on any error\n\necho \"🚀 Starting High-Priority Database Fixes Deployment...\"\necho \"================================================\"\n\n# Step 1: Check prerequisites\necho \"📋 Checking prerequisites...\"\n\nif ! command -v docker &> /dev/null; then\n    echo \"❌ Docker not found. Please install Docker first.\"\n    exit 1\nfi\n\nif ! command -v npx &> /dev/null; then\n    echo \"❌ npx not found. Please install Node.js first.\"\n    exit 1\nfi\n\necho \"✅ Prerequisites check passed\"\n\n# Step 2: Start database\necho \"🐘 Starting PostgreSQL database...\"\ndocker compose up -d postgres\n\n# Wait for database to be ready\necho \"⏳ Waiting for database to be ready...\"\nsleep 10\n\n# Step 3: Set environment\necho \"🔧 Setting up environment...\"\nexport DATABASE_URL=\"postgresql://plugin_user:plugin_password@localhost:5434/plugin_db\"\n\n# Step 4: Verify database connection\necho \"🔌 Testing database connection...\"\nif ! docker exec -it $(docker compose ps -q postgres) pg_isready -U plugin_user -d plugin_db; then\n    echo \"❌ Database connection failed. Please check Docker setup.\"\n    exit 1\nfi\n\necho \"✅ Database connection successful\"\n\n# Step 5: Run migration\necho \"📦 Applying database migration...\"\necho \"Migration file: migrations/1751276936823_fix-high-priority-database-issues.ts\"\necho \"Changes:\"\necho \"  - Add foreign key constraint: links.shared_by_user_id -> users.user_id\"\necho \"  - Add foreign key constraint: telegram_groups.registered_by_user_id -> users.user_id\"\necho \"  - Standardize links.shared_by_user_id field type from VARCHAR(255) to TEXT\"\necho \"\"\nread -p \"Proceed with migration? (y/N): \" -n 1 -r\necho\nif [[ ! $REPLY =~ ^[Yy]$ ]]; then\n    echo \"❌ Migration cancelled by user\"\n    exit 1\nfi\n\n# Apply the migration\necho \"🔄 Running migration...\"\nif npx tsx ./node_modules/.bin/node-pg-migrate up -m migrations; then\n    echo \"✅ Migration applied successfully\"\nelse\n    echo \"❌ Migration failed. Check the error messages above.\"\n    exit 1\nfi\n\n# Step 6: Verify changes\necho \"🔍 Verifying changes...\"\necho \"Checking foreign key constraints...\"\n\n# Create temporary verification script\ncat > /tmp/verify_changes.sql << 'EOF'\n-- Check foreign key constraints\nSELECT \n    tc.table_name, \n    tc.constraint_name, \n    tc.constraint_type,\n    kcu.column_name,\n    ccu.table_name AS foreign_table_name,\n    ccu.column_name AS foreign_column_name\nFROM information_schema.table_constraints AS tc \nJOIN information_schema.key_column_usage AS kcu\n    ON tc.constraint_name = kcu.constraint_name\nJOIN information_schema.constraint_column_usage AS ccu\n    ON ccu.constraint_name = tc.constraint_name\nWHERE tc.constraint_type = 'FOREIGN KEY' \n    AND tc.table_name IN ('links', 'telegram_groups')\n    AND tc.constraint_name LIKE '%_fkey';\n\n-- Check field type changes  \nSELECT \n    table_name, \n    column_name, \n    data_type, \n    character_maximum_length\nFROM information_schema.columns \nWHERE table_name = 'links' \n    AND column_name = 'shared_by_user_id';\nEOF\n\n# Run verification\nif docker exec -i $(docker compose ps -q postgres) psql -U plugin_user -d plugin_db < /tmp/verify_changes.sql; then\n    echo \"✅ Verification completed\"\nelse\n    echo \"⚠️  Verification had issues, but migration may still be successful\"\nfi\n\n# Clean up\nrm -f /tmp/verify_changes.sql\n\n# Step 7: Index analysis (optional)\necho \"\"\necho \"📊 Index Usage Analysis\"\necho \"=======================\"\necho \"To analyze index usage and identify unused indexes:\"\necho \"  psql \\$DATABASE_URL -f scripts/analyze-index-usage.sql\"\necho \"\"\nread -p \"Run index analysis now? (y/N): \" -n 1 -r\necho\nif [[ $REPLY =~ ^[Yy]$ ]]; then\n    echo \"🔍 Running index analysis...\"\n    if docker exec -i $(docker compose ps -q postgres) psql -U plugin_user -d plugin_db < scripts/analyze-index-usage.sql; then\n        echo \"✅ Index analysis completed\"\n    else\n        echo \"⚠️  Index analysis had issues, but you can run it manually later\"\n    fi\nfi\n\necho \"\"\necho \"🎉 High-Priority Database Fixes Deployment Complete!\"\necho \"================================================\"\necho \"✅ Foreign key constraints added for data integrity\"\necho \"✅ Field types standardized across user references\"\necho \"✅ Database schema improvements applied\"\necho \"\"\necho \"📋 Next Steps:\"\necho \"1. Monitor application logs for any constraint violations\"\necho \"2. Review index analysis results for optimization opportunities\"\necho \"3. Consider running additional schema optimizations from docs/database-schema-analysis.md\"\necho \"\"\necho \"📚 Documentation: docs/high-priority-database-fixes-implementation.md\"\necho \"🔄 Rollback: npx tsx ./node_modules/.bin/node-pg-migrate down -m migrations\"